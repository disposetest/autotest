name: Automated tests
variables:
  python.version: '3.7.6'
stages:

  - stage: Build
    jobs:
    - job: Build
      pool:
        name: Hosted Ubuntu 1604
      steps:
      #install azure cli
      - script: 'curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash'
        displayName: Install azure cli
        workingDirectory:  ./terraform
        # Download Azure Key Vault secrets
      - task: AzureKeyVault@1
        inputs:
          azureSubscription: 'Free Trial(520b1771-2700-4340-89c6-560a52f65ee9)'
          KeyVaultName: 'nanoVault25967'
          SecretsFilter: '*'
          RunAsPreJob: true
      #login to azure account
      - script: 'az login -u $(email) -p $(password)'
        displayName: login to azure
        workingDirectory:  ./terraform
      #set resources on azure
      - script: 'terraform init'
        displayName: initialise azure resources
        workingDirectory:  ./terraform
      #prepare to resources for build
      - script: 'terraform plan'
        displayName: prepare azure resources
        workingDirectory:  ./terraform
      #create azure resources
      - script: 'terraform apply'
        displayName: create azure resources
        workingDirectory:  ./terraform

    # Needed for Terraform VM deployment
    # - task: InstallSSHKey@0
    #   inputs:
    #     knownHostsEntry: 'KNOWN_HOSTS_STRING'
    #     sshPublicKey: 'PUBLIC_KEY'
    #     sshKeySecureFile: 'id_rsa'
      - task: ArchiveFiles@2
        displayName: 'Archive FakeRestAPI'
        inputs:
          rootFolderOrFile: 'path/to/fakerestapi'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
      - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
        displayName: 'Upload Package'
        artifact: drop-fakerestapi
  - stage:
    jobs:
    - deployment: FakeRestAPI
      pool:
        vmImage: 'Ubuntu-16.04'
      environment: 'TEST'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureWebApp@1
              displayName: 'Deploy Azure Web App'
              inputs:
                azureSubscription: ''
                appName: ''
                appType: webApp
                package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path


